{
    "docs": [
        {
            "location": "/",
            "text": "Introduction\n\u00b6\n\n\nThis workshop is about the technologies and tools we use to construct our software artifacts and the mechanisms we give our customers to install our software.",
            "title": "Introduction"
        },
        {
            "location": "/#introduction",
            "text": "This workshop is about the technologies and tools we use to construct our software artifacts and the mechanisms we give our customers to install our software.",
            "title": "Introduction"
        },
        {
            "location": "/resources/",
            "text": "Resources\n\u00b6\n\n\nChocolatey homepage\n\n\nDefault package Repository\n\n\nDIPS Nuget\n\n\nUtviklerforum om Arena Delivery\n\n\nInternal Guidelines\n\u00b6\n\n\nPackaging\n\n\nRequirements for naming of packages",
            "title": "Resources"
        },
        {
            "location": "/resources/#resources",
            "text": "Chocolatey homepage  Default package Repository  DIPS Nuget  Utviklerforum om Arena Delivery",
            "title": "Resources"
        },
        {
            "location": "/resources/#internal-guidelines",
            "text": "Packaging  Requirements for naming of packages",
            "title": "Internal Guidelines"
        },
        {
            "location": "/exercises/01-InstallChocolatey/",
            "text": "Exercise 1: Install Chocolatey\n\u00b6\n\n\nInstall - Chocolatey\n\u00b6\n\n\nFollow the instructions at https://chocolatey.org/install and install Chocolatey using Powershell",
            "title": "Exercise 1: Install Chocolatey"
        },
        {
            "location": "/exercises/01-InstallChocolatey/#exercise-1-install-chocolatey",
            "text": "",
            "title": "Exercise 1: Install Chocolatey"
        },
        {
            "location": "/exercises/01-InstallChocolatey/#install-chocolatey",
            "text": "Follow the instructions at https://chocolatey.org/install and install Chocolatey using Powershell",
            "title": "Install - Chocolatey"
        },
        {
            "location": "/exercises/02-InstallVSCode/",
            "text": "Exercise 2: Install Visual Studio Code\n\u00b6\n\n\n\n\nCall \nchoco install vscode -y\n\n\nNotice the message \"Environment Vars have changed\".\n\n\nType \ncode\n. Notice that it errors.\n\n\nReopen powershell.\n\n\nType \ncode\n. Notice that it opens Visual Studio Code.",
            "title": "Exercise 2: Install Visual Studio Code"
        },
        {
            "location": "/exercises/02-InstallVSCode/#exercise-2-install-visual-studio-code",
            "text": "Call  choco install vscode -y  Notice the message \"Environment Vars have changed\".  Type  code . Notice that it errors.  Reopen powershell.  Type  code . Notice that it opens Visual Studio Code.",
            "title": "Exercise 2: Install Visual Studio Code"
        },
        {
            "location": "/exercises/03-CreatePackage/",
            "text": "Exercise 3: Create Package Manually\n\u00b6\n\n\nIn the src code folder you will find an executable named \nWpfApp1.exe\n.\n\n\n\n\n\n\nSetup the nuspec for a package with id=WpfApp1, and version = 0.0.1.\n   The package should contain only the file WpfApp1.exe in its bin folder.\n   No dependencies.\n\n\n\n\n\n\nCreate the package.\n\n\n\n\nInstall the package. \nhint: use the exercise folder as source\n\n\nReopen the powershell cmdline.\n\n\nStart the application by typing PS> WpfApp1 on the powershell cmdline.",
            "title": "Exercise 3: Create Package Manually"
        },
        {
            "location": "/exercises/03-CreatePackage/#exercise-3-create-package-manually",
            "text": "In the src code folder you will find an executable named  WpfApp1.exe .    Setup the nuspec for a package with id=WpfApp1, and version = 0.0.1.\n   The package should contain only the file WpfApp1.exe in its bin folder.\n   No dependencies.    Create the package.   Install the package.  hint: use the exercise folder as source  Reopen the powershell cmdline.  Start the application by typing PS> WpfApp1 on the powershell cmdline.",
            "title": "Exercise 3: Create Package Manually"
        },
        {
            "location": "/exercises/04-SetScriptPermissions/",
            "text": "Exercise 04: Set-permissions to run scripts in powershell\n\u00b6\n\n\n\n\nSet permissions to Bypass for CurrentUser.",
            "title": "Exercise 04: Set-permissions to run scripts in powershell"
        },
        {
            "location": "/exercises/04-SetScriptPermissions/#exercise-04-set-permissions-to-run-scripts-in-powershell",
            "text": "Set permissions to Bypass for CurrentUser.",
            "title": "Exercise 04: Set-permissions to run scripts in powershell"
        },
        {
            "location": "/exercises/05-CreatePackage/",
            "text": "Exercise 5: Create Package containing an installscript\n\u00b6\n\n\nIn the src code folder you will find an executable named \nWpfApp2.exe\n.\n\n\n\n\n\n\nSetup the nuspec for a package with id=WpfApp2, and version = 0.0.1.\n   The package should contain only the file WpfApp2.exe in its bin folder.\n   The package should also contain the installscript \nchocolateyInstall.ps1\n.\n\n\n\n\n\n\nThe package should have a dependency to dips-choco-utility minimum version 1.0.0.\n\n\n\n\n\n\nCreate the package.\n\n\n\n\n\n\nOpen the *.nupkg file with nuget package explorer. Verify metadata, contents and dependencies.",
            "title": "Exercise 5: Create Package containing an installscript"
        },
        {
            "location": "/exercises/05-CreatePackage/#exercise-5-create-package-containing-an-installscript",
            "text": "In the src code folder you will find an executable named  WpfApp2.exe .    Setup the nuspec for a package with id=WpfApp2, and version = 0.0.1.\n   The package should contain only the file WpfApp2.exe in its bin folder.\n   The package should also contain the installscript  chocolateyInstall.ps1 .    The package should have a dependency to dips-choco-utility minimum version 1.0.0.    Create the package.    Open the *.nupkg file with nuget package explorer. Verify metadata, contents and dependencies.",
            "title": "Exercise 5: Create Package containing an installscript"
        },
        {
            "location": "/exercises/06-ScriptToInstallPackage/",
            "text": "Exercise 06: Script to install package\n\u00b6\n\n\n\n\n\n\nWrite a powershell script to install the package from exercise 5.\n   Use a packages.config file.\n   The package takes a parameter \nInstallLocation\n that specifies where the executable should be installed to.\n\n\n\n\n\n\nRun the script to install the package.\n\n\n\n\n\n\nVerify that the executable is copied to \nInstallLocation\n.",
            "title": "Exercise 06: Script to install package"
        },
        {
            "location": "/exercises/06-ScriptToInstallPackage/#exercise-06-script-to-install-package",
            "text": "Write a powershell script to install the package from exercise 5.\n   Use a packages.config file.\n   The package takes a parameter  InstallLocation  that specifies where the executable should be installed to.    Run the script to install the package.    Verify that the executable is copied to  InstallLocation .",
            "title": "Exercise 06: Script to install package"
        },
        {
            "location": "/exercises/07-Uninstall/",
            "text": "Exercise 07: Optional, Uninstall\n\u00b6\n\n\n\n\nRun PS>choco uninstall wpfapp2.\n\n\nVerify C:\\Programdata\\chocolatey\\lib\\wpfapp2 is removed.\n\n\nVerify C:\\dips\\wpfapp2.exe is still present.\n\n\nRemove the file manually.\n\n\nAdd the file chocolateyUninstall.ps1 to the exercise 5 directory.\n\n\nRun choco pack to build.\n\n\nInstall the package again using the script from exercise 6.\n\n\nPS>choco uninstall wpfapp2.\n\n\nVerify C:\\dips\\wpfapp2.exe has been removed.",
            "title": "Exercise 07: Optional, Uninstall"
        },
        {
            "location": "/exercises/07-Uninstall/#exercise-07-optional-uninstall",
            "text": "Run PS>choco uninstall wpfapp2.  Verify C:\\Programdata\\chocolatey\\lib\\wpfapp2 is removed.  Verify C:\\dips\\wpfapp2.exe is still present.  Remove the file manually.  Add the file chocolateyUninstall.ps1 to the exercise 5 directory.  Run choco pack to build.  Install the package again using the script from exercise 6.  PS>choco uninstall wpfapp2.  Verify C:\\dips\\wpfapp2.exe has been removed.",
            "title": "Exercise 07: Optional, Uninstall"
        }
    ]
}